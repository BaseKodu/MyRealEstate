# Generated by Django 5.1.3 on 2025-07-01 20:30

import django.db.models.deletion
import myrealestate.common.storage
import myrealestate.properties.models
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('companies', '0001_initial'),
        ('contenttypes', '0002_remove_content_type_name'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Estate',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(max_length=255)),
                ('address', models.CharField(blank=True, max_length=500, null=True)),
                ('total_buildings', models.IntegerField(default=0)),
                ('estate_type', models.CharField(choices=[('R', 'Residential'), ('C', 'Commercial'), ('M', 'Mixed Use')], default='R', max_length=1)),
                ('managing', models.BooleanField(default=False, help_text='Select if you or your company is managing this estate')),
                ('company', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='owned_estates', to='companies.company')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Building',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(max_length=255)),
                ('building_type', models.CharField(choices=[('M', 'Multi Unit'), ('S', 'Single Unit'), ('C', 'Complex')], default='M', max_length=1)),
                ('address', models.CharField(blank=True, max_length=500, null=True)),
                ('managing', models.BooleanField(default=False, help_text='Select if you or your company is managing this building')),
                ('company', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='owned_buildings', to='companies.company')),
                ('estate', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='buildings', to='properties.estate')),
            ],
        ),
        migrations.CreateModel(
            name='PropertyImage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('object_id', models.PositiveIntegerField()),
                ('image', models.ImageField(storage=myrealestate.common.storage.CustomS3Boto3Storage(), upload_to=myrealestate.properties.models.property_image_path, validators=[myrealestate.properties.models.validate_file_size])),
                ('caption', models.CharField(blank=True, max_length=200)),
                ('is_primary', models.BooleanField(default=False)),
                ('order', models.PositiveIntegerField(default=0)),
                ('content_type', models.ForeignKey(limit_choices_to={'model__in': ('estate', 'building', 'unit', 'subunit')}, on_delete=django.db.models.deletion.CASCADE, to='contenttypes.contenttype')),
            ],
            options={
                'ordering': ['order', '-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Unit',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('number', models.CharField(max_length=50)),
                ('unit_type', models.CharField(choices=[('A', 'Apartment'), ('H', 'House'), ('O', 'Office')], max_length=1)),
                ('is_vacant', models.BooleanField(default=True)),
                ('square_footage', models.DecimalField(decimal_places=2, max_digits=10, null=True)),
                ('bedrooms', models.IntegerField(default=1)),
                ('bathrooms', models.DecimalField(decimal_places=1, default=1, max_digits=3)),
                ('furnished', models.BooleanField(default=False)),
                ('available_from', models.DateField(blank=True, null=True)),
                ('base_rent', models.DecimalField(decimal_places=2, max_digits=10, null=True)),
                ('deposit_amount', models.DecimalField(decimal_places=2, max_digits=10, null=True)),
                ('parking_spots', models.IntegerField(default=0)),
                ('building', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='units', to='properties.building')),
                ('company', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='owned_units', to='companies.company')),
                ('main_tenant', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='units', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='SubUnit',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('number', models.CharField(max_length=50)),
                ('subunit_type', models.CharField(choices=[('R', 'Room'), ('S', 'Store'), ('O', 'Office')], default='R', max_length=1)),
                ('furnished', models.BooleanField(default=False)),
                ('available_from', models.DateField(blank=True, null=True)),
                ('base_rent', models.DecimalField(decimal_places=2, max_digits=10, null=True)),
                ('deposit_amount', models.DecimalField(decimal_places=2, max_digits=10, null=True)),
                ('is_vacant', models.BooleanField(default=True)),
                ('sublet_tenant', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='subunits', to=settings.AUTH_USER_MODEL)),
                ('parent_unit', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='subunits', to='properties.unit')),
            ],
        ),
        migrations.AddIndex(
            model_name='building',
            index=models.Index(fields=['building_type'], name='properties__buildin_ca28a9_idx'),
        ),
        migrations.AddIndex(
            model_name='building',
            index=models.Index(fields=['estate', 'building_type'], name='properties__estate__77c8e4_idx'),
        ),
        migrations.AddIndex(
            model_name='building',
            index=models.Index(fields=['name'], name='properties__name_04247c_idx'),
        ),
        migrations.AddIndex(
            model_name='propertyimage',
            index=models.Index(fields=['content_type', 'object_id'], name='properties__content_1cca38_idx'),
        ),
        migrations.AddIndex(
            model_name='propertyimage',
            index=models.Index(fields=['is_primary'], name='properties__is_prim_893694_idx'),
        ),
        migrations.AddIndex(
            model_name='propertyimage',
            index=models.Index(fields=['order'], name='properties__order_99feac_idx'),
        ),
        migrations.AddConstraint(
            model_name='propertyimage',
            constraint=models.UniqueConstraint(condition=models.Q(('is_primary', True)), fields=('content_type', 'object_id', 'is_primary'), name='unique_primary_image_per_object'),
        ),
        migrations.AddIndex(
            model_name='unit',
            index=models.Index(fields=['is_vacant'], name='properties__is_vaca_0ff13f_idx'),
        ),
        migrations.AddIndex(
            model_name='unit',
            index=models.Index(fields=['base_rent'], name='properties__base_re_64b3a1_idx'),
        ),
        migrations.AddIndex(
            model_name='unit',
            index=models.Index(fields=['unit_type', 'is_vacant'], name='properties__unit_ty_fec6ad_idx'),
        ),
        migrations.AddIndex(
            model_name='unit',
            index=models.Index(fields=['building', 'is_vacant'], name='properties__buildin_057779_idx'),
        ),
        migrations.AddIndex(
            model_name='unit',
            index=models.Index(fields=['available_from'], name='properties__availab_dcac14_idx'),
        ),
        migrations.AddIndex(
            model_name='unit',
            index=models.Index(fields=['bedrooms'], name='properties__bedroom_4deac4_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='unit',
            unique_together={('building', 'number')},
        ),
        migrations.AddIndex(
            model_name='subunit',
            index=models.Index(fields=['is_vacant'], name='properties__is_vaca_777611_idx'),
        ),
        migrations.AddIndex(
            model_name='subunit',
            index=models.Index(fields=['base_rent'], name='properties__base_re_3546ba_idx'),
        ),
        migrations.AddIndex(
            model_name='subunit',
            index=models.Index(fields=['available_from'], name='properties__availab_ad2cb0_idx'),
        ),
        migrations.AddIndex(
            model_name='subunit',
            index=models.Index(fields=['parent_unit', 'is_vacant'], name='properties__parent__188ea7_idx'),
        ),
    ]
